#ifndef USB_H
#define USB_H

#define NULL (void*)0x0
#define RX 0
#define TX 1
#define EVEN 0
#define ODD 1
#define USB_N_ENDPOINTS 15

#define ENDP0_SIZE 64
#define ENDP1_SIZE 64

void usb_init(void);

typedef struct{
    uint8_t mask; // Mask of interupt
    void (*handler)(void); // Pointer to USB handler
} usb_int_table_t;

typedef struct {
    uint8_t bLength;
    uint8_t bDescriptorType;
    uint16_t wString[];
} str_descriptor_t;

typedef struct {
    uint16_t wValue;
    uint16_t wIndex;
    const void* addr;
    uint8_t length;
} descriptor_entry_t;

typedef struct {
    uint32_t desc;
    void* addr;
} bdt_t;

typedef struct {
    union {
        struct {
            uint8_t bmRequestType;
            uint8_t bRequest;
        };
        uint16_t wRequestAndType;
    };
    uint16_t wValue;
    uint16_t wIndex;
    uint16_t wLength;
} setup_t;

#endif